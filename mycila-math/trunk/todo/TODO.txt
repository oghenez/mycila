
- ALGOS MATH
	- algos maths / projects euler
	- prendre algos sites ripp√©s
	- trier bookmarks
	- pour int, long et bigint:
		- is prime, next prime, prime(a, b)
		- perfect number, abundant, inverse of abundant, aliquot
	- http://en.wikibooks.org/wiki/Algorithm_implementation
	- http://www2-fs.informatik.uni-tuebingen.de/~reinhard/krypto/
	- http://en.literateprograms.org/LiteratePrograms:Welcome
	- http://rosettacode.org/wiki/Main_Page
	- http://www.luschny.de/math/
	- http://www.alpertron.com.ar/
	- LIB COLT: faire jar src
	- code pour trouver recurring cycle + ajouter algos:
		- http://en.wikipedia.org/wiki/Cyclic_number
		- http://en.wikipedia.org/wiki/Cyclic_number
		- http://en.wikipedia.org/wiki/Recurring_decimal
		- http://en.wikipedia.org/wiki/142857
	- fermat little theorem, Carmichael function, euler tothient
		- http://en.wikipedia.org/wiki/Carmichael_function
		- http://mathworld.wolfram.com/FermatsLittleTheorem.html
		- http://en.wikipedia.org/wiki/Euler%27s_theorem
		- http://en.wikipedia.org/wiki/Fermat%27s_little_theorem
		- http://en.wikipedia.org/wiki/Primitive_root_modulo_n
		- http://en.wikipedia.org/wiki/Euler%27s_totient_function
	- compute square roots:
		- http://en.wikipedia.org/wiki/Methods_of_computing_square_roots
		- http://en.wikipedia.org/wiki/Shifting_nth-root_algorithm
		- http://en.wikipedia.org/wiki/Integer_square_root
		- http://en.wikipedia.org/wiki/Category:Root-finding_algorithms
		- http://www.merriampark.com/bigsqrt.htm
		- sqrt(N) == N pow 0.5
	- recup code commons-math
	- faire big fraction
	- avec euclid: http://demonstrations.wolfram.com/TheEuclideanAlgorithmAndSimpleContinuedFractions/
	- javadoc
	- http://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Continued_fraction_expansion
		
