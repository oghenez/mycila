#summary Mycila Testing Framework
#labels Featured

== Introduction ==

Mycila Testing Framework is not yet another testing framework. There are already plenty of them (Spring, Junit, TestNG, JMock, EasyMock, Mockito, JMock, DbUnit, Powermock, ...). 

Mycila Testing Framework is an *integration framework*. Which means that instead of coupling the setup of your test to these frameworks, you can just setup your test with Mycila. Mycila uses a plugin infrastructure to detect which plugin should enhance your test. This way, you have only one setup to do for all your tests, whether you use jmock, easymock, guice, spring, ... Mycila also provides annotation facilities thanks to plugins, to use IOCs and Mock frameworks easier when they do not have already some annotations.

== Download ==

*mycila-plugin* is available
 * from the [http://code.google.com/p/mycila/downloads/list download section]
 * from our [http://code.google.com/p/mc-repo/ alternate maven repository]
 * and maybe (if deployed) in the central maven repository

== Maven dependency ==

To add mycila-plugin in your pom, just add this dependency (with of course the good version number your want):

{{{
<dependency>
    <groupId>com.google.code.mycila</groupId>
    <artifactId>mycila-plugin</artifactId>
    <version>X.Y</version>
</dependency>
}}}

We also provides a [http://code.google.com/p/jarjar/ JarJar] version packaged with [http://www.jgrapht.org/ JGraphT]. By using this version, you will have in one jar all the dependencies you need, and they won't clash with your jars.

{{{
<dependency>
    <groupId>com.google.code.mycila</groupId>
    <artifactId>mycila-plugin</artifactId>
    <version>X.Y</version>
    <classifier>full</classifier>
</dependency>
}}}


== Reports ==

Javadoc, Source XREF, Test reports, Coverages, ...

http://old.mycila.com/p/mycila/mycila-plugin/

== Manual ==