#summary Mycila Testing Framework
#labels Featured,TODO
#sidebar PluginBar

== Introduction ==

Mycila Testing Framework is not yet another testing framework. There are already plenty of them (Spring, Junit, TestNG, JMock, EasyMock, Mockito, JMock, DbUnit, Powermock, ...). 

Mycila Testing Framework is an *integration framework*. Which means that instead of coupling the setup of your test to these frameworks, you can just setup your test with Mycila. Mycila uses a plugin infrastructure to detect which plugin should enhance your test. This way, you have only one setup to do for all your tests, whether you use jmock, easymock, guice, spring, ... Mycila also provides annotation facilities thanks to plugins, to use IOCs and Mock frameworks easier when they do not have already some annotations.

== Download ==

Mycila Testing Framework is composed of:
 * *mycila-testing-api*: The plugin API and test enhancer
 * *mycila-plugin-XXX*: The plugins. IE. mycila-plugin-jmock

You can also use the *mycila-testing-all* jar, which contains the API and all plugins. If you use mycila-testing-all, you are responsible to put in your project the jars you need. They won't transitively come to your project.

You can download or get the modules:
 * from the [http://code.google.com/p/mycila/downloads/list download section]
 * from our [http://code.google.com/p/mc-repo/ alternate maven repository]
 * from the [http://repo1.maven.org/maven2/com/mycila central maven repository] (if deployed)

== Maven dependency ==

To use the full jar with all plugins plus the API, just add this dependency (with of course the good version number your want):

{{{
<dependency>
    <groupId>com.mycila.testing</groupId>
    <artifactId>mycila-testing-all</artifactId>
    <version>X.Y</version>
</dependency>
}}}

`mycila-testing-all` contains also necessary dependencies (mycila-plugin and [http://www.jgrapht.org/ JGraphT] embedded with [http://code.google.com/p/jarjar/ JarJar])

If you prefer to use only the plugins you want, i.e. Guice and JMock, just add these dependencies to your POM (the API and required dependencies comes transitively):

{{{
<dependency>
    <groupId>com.mycila.testing.plugins</groupId>
    <artifactId>mycila-testing-jmock</artifactId>
    <version>X.Y</version>
</dependency>
<dependency>
    <groupId>com.mycila.testing.plugins</groupId>
    <artifactId>mycila-testing-guice</artifactId>
    <version>X.Y</version>
</dependency>
}}}

== Documentation ==

 * [http://old.mycila.com/p/mycila/mycila-testing/ Reports]: Javadoc, Source XREF, Test reports, Coverages, ...
 * Complete list of [ModuleList available modules] (API and plugins) and their documentation
 * How to [PluginDevelopment create your own plugins]
 * How to [TestingAPI use the test enhancer in the API]

== Test Sample ==

Here is an example of a unit test using Mycila Testing Framework. In our project, we use [http://code.google.com/p/google-guice/ Google Guice] and [http://code.google.com/p/mockito/ Mockito].

{{{

}}}