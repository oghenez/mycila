#summary Mycila Plugin Framework
#labels Featured

== Introduction ==

Mycila Plugin Framework is a really little (4 classes) plugin framework that enables you to build quickly a plugin architecture in your application, supporting dependencies.

== Download ==

*mycila-plugin* is available
 * from the [http://code.google.com/p/mycila/downloads/list download section]
 * from our [http://code.google.com/p/mc-repo/ alternate maven repository]
 * and maybe (if deployed) in the central maven repository

== Usage ==

The usage is very easy. It works nearly like the JDK [http://java.sun.com/javase/6/docs/api/index.html?java/util/ServiceLoader.html ServiceLoader] class:

{{{
PluginManager<MyPlugin> manager = new PluginManager<MyPlugin>(MyPlugin.class, "META-INF/myapp/plugins.properties");
for (MyPlugin plugin : manager.getResolver().getResolvedPlugins()) {
    plugin.execute();
}
}}}

You just have to provide your plugin type (which implement the Plugin interface as we will see later), and also provide the resources to check on the classpath. The PluginManager will load all the plugins found in all `META-INF/myapp/plugins.properties` resources.