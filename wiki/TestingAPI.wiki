#summary Mycila Testing API
#sidebar PluginBar

== Junit integration ==

You have the choice of:
 * Extend AbstractMycilaJunitTest
 * Extend AbstractMycilaJunit4Test
 * Use MycilaJunitRunner
 * Or just setup the test by yourself if you want to have more control, like described below.

*Junit 3*

{{{
public final class MyTest extends AbstractMycilaJunitTest {
    public void test_something() {
        // test something
    }
}
}}}

*Junit 4*

{{{
public final class MyTest extends AbstractMycilaJunit4Test {
    @Test
    public void test_something() {
        // test something
    }
}
}}}

Preferred way since does not extend any class:

{{{
@RunWith(MycilaJunitRunner.class)
public final class MyTest {
    @Test
    public void test_something() {
        // test something
    }
}
}}}


== TestNG integration ==

You have the choice of:
 * Extend AbstractMycilaTestNGTest
 * Or just setup the test by yourself if you want to have more control, like described below.


{{{
public final class MyTest extends AbstractMycilaTestNGTest {
    @Test
    public void test_something() {
        // test something
    }
}
}}}

== Setup the test yourself (also work for Junit and TestNG) ==

If your framework support @BeforeClass, like Junit and TestNG, you can use it to setup your test like this:

{{{
public final class MyTest {

    @BeforeClass
    public void setup() {
        TestSetup.setup(this);
    }

    @Test
    public void test_something() {
        // test something
    }
}
}}}

Otherwise, just use the test constructor:

{{{
public final class MyTest {

    public MyTest() {
        TestSetup.setup(this);
    }

    public void test_something() {
        // test something
    }
}
}}}