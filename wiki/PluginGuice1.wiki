#summary Google Guice Plugin
#sidebar PluginBar

*Google Guice [http://code.google.com/p/google-guice/ official website]*

Guice integration enables you to automatically create the injector with the module and even with the bindings you provide.

*Annotations*

 * [http://mycila.googlecode.com/svn/mycila-testing/trunk/mycila-testing-plugins/mycila-testing-guice/src/main/java/com/mycila/testing/plugin/guice/GuiceContext.java @GuiceContext]: Used on a test class to specify a list of Guice modules
 * [http://mycila.googlecode.com/svn/mycila-testing/trunk/mycila-testing-plugins/mycila-testing-guice/src/main/java/com/mycila/testing/plugin/guice/ModuleProvider.java @ModuleProvider]: Used on some methods that provides Guice modules
 * [http://mycila.googlecode.com/svn/mycila-testing/trunk/mycila-testing-plugins/mycila-testing-guice/src/main/java/com/mycila/testing/plugin/guice/Bind.java @Bind]: Used on fields or methods to add specific bindings.

*Example 1: loading Guice modules and injecting dependencies*

{{{
@GuiceContext(AModule.class)
public final class GuiceContextTest {

    @Inject
    @Named("service1")
    Service service1;

    @Inject
    Provider<Service2> service2;

    @Inject
    Injector injector;

    @Test
    public void setup() {
        TestSetup.setup(this);
    }

    @Test
    public void test_something() {
        //...
    }
}
}}}


*Example 2: providing some additional modules*

Provider methods are really useful when your module do not have a default constructor to be automatically instantiated.

{{{
public final class ModuleProviderTest {

    @Inject
    Injector injector;

    @Test
    public void setup() {
        TestSetup.setup(this);
    }

    @ModuleProvider
    private Module providesOneModule() {
        return new MyModule1WithParams("hello", 6);
    }

    @ModuleProvider
    Module[] providesAnArrayOfModules() {
        return new Module[]{new MyModule2WithParams("hello", 6), new MyModule3WithParams("hello", 6)};
    }

    @ModuleProvider
    public Iterable<Module> provides3() {
        return new ArrayList<Module>() {{
            add(new MyModule4WithParams("hello", 6));
            add(new MyModule5WithParams("hello", 6));
        }};
    }

}
}}}